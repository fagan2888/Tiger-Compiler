101 shift/reduce conflicts

error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)
error:  state 28: shift/reduce conflict (shift LBRACK, reduce by rule 51)
error:  state 61: shift/reduce conflict (shift OR, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift AND, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift GE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift GT, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift LE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift LT, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift NEQ, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift EQ, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift DIVIDE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift TIMES, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift MINUS, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift PLUS, reduce by rule 32)
error:  state 97: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 16)
error:  state 103: shift/reduce conflict (shift OR, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift AND, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift GE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift GT, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift LE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift LT, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift NEQ, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift EQ, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift DIVIDE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift TIMES, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift MINUS, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift PLUS, reduce by rule 74)
error:  state 104: shift/reduce conflict (shift ELSE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift OR, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift AND, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift GE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift GT, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift LE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift LT, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift NEQ, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift EQ, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift DIVIDE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift TIMES, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift MINUS, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift PLUS, reduce by rule 73)
error:  state 126: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 17)
error:  state 131: shift/reduce conflict (shift OR, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift AND, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift GE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift GT, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift LE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift LT, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift NEQ, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift EQ, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift DIVIDE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift TIMES, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift MINUS, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift PLUS, reduce by rule 72)
error:  state 134: shift/reduce conflict (shift OR, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift AND, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 65)
error:  state 144: shift/reduce conflict (shift OR, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift AND, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift GE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift GT, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift LE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift LT, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift NEQ, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift EQ, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift DIVIDE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift TIMES, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift MINUS, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift PLUS, reduce by rule 75)
error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)

state 0:

	program : . exp 
	program : . decs 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	program	goto 152
	decs	goto 14
	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 10
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 3


state 1:

	exp : letstm .  (reduce by rule 20)



	.	reduce by rule 20


state 2:

	exp : forstm .  (reduce by rule 21)



	.	reduce by rule 21


state 3:

	exp : whilestm .  (reduce by rule 22)



	.	reduce by rule 22


state 4:

	exp : ifthenelse .  (reduce by rule 24)



	.	reduce by rule 24


state 5:

	exp : ifthen .  (reduce by rule 23)



	.	reduce by rule 23


state 6:

	exp : recordcreate .  (reduce by rule 34)



	.	reduce by rule 34


state 7:

	exp : arraycreate .  (reduce by rule 33)



	.	reduce by rule 33


state 8:

	exp : funcall .  (reduce by rule 26)



	.	reduce by rule 26


state 9:

	exp : lvalue .  (reduce by rule 31)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 31
	DOT	shift 30
	ASSIGN	shift 29


	.	reduce by rule 31


state 10:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 0


state 11:

	exp : fundec .  (reduce by rule 25)



	.	reduce by rule 25


state 12:

	exp : vardec .  (reduce by rule 27)



	.	reduce by rule 27


state 13:

	exp : tydec .  (reduce by rule 28)



	.	reduce by rule 28


state 14:

	program : decs .  (reduce by rule 1)
	decs : decs . dec 

	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	dec	goto 47
	tydec	goto 46
	vardec	goto 45
	fundec	goto 44

	.	reduce by rule 1


state 15:

	tydec : TYPE . ID EQ ty 

	ID	shift 48


	.	error


state 16:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 49


	.	error


state 17:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 50


	.	error


state 18:

	exp : NIL .  (reduce by rule 35)



	.	reduce by rule 35


state 19:

	exp : BREAK .  (reduce by rule 36)



	.	reduce by rule 36


state 20:

	letstm : LET . decs IN expseq END 


	decs	goto 51

	.	reduce by rule 3


state 21:

	forstm : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 52


	.	error


state 22:

	whilestm : WHILE . exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 53
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 23:

	ifthen : IF . exp THEN exp 
	ifthenelse : IF . exp THEN exp ELSE exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 54
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 24:

	exp : MINUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 55
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 25:

	exp : LPAREN . expseq RPAREN 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 57
	lvalue	goto 9
	expseq	goto 56
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 56


state 26:

	exp : STRING .  (reduce by rule 30)



	.	reduce by rule 30


state 27:

	exp : INT .  (reduce by rule 29)



	.	reduce by rule 29

error:  state 28: shift/reduce conflict (shift LBRACK, reduce by rule 51)

state 28:

	lvalue : ID .  (reduce by rule 51)
	funcall : ID . LPAREN funinputs RPAREN 
	arraycreate : ID . LBRACK exp RBRACK OF exp 
	recordcreate : ID . LBRACE recordinputs RBRACE 

	LPAREN	shift 60
	LBRACK	shift 59
	LBRACE	shift 58


	.	reduce by rule 51


state 29:

	exp : lvalue ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 61
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 30:

	lvalue : lvalue DOT . ID 

	ID	shift 62


	.	error


state 31:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 63
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 32:

	exp : exp OR . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 64
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 33:

	exp : exp AND . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 65
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 34:

	exp : exp GE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 66
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 35:

	exp : exp GT . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 67
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 36:

	exp : exp LE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 68
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 37:

	exp : exp LT . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 69
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 38:

	exp : exp NEQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 70
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 39:

	exp : exp EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 71
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 40:

	exp : exp DIVIDE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 72
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 41:

	exp : exp TIMES . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 73
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 42:

	exp : exp MINUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 74
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 43:

	exp : exp PLUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 75
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 44:

	dec : fundec .  (reduce by rule 6)



	.	reduce by rule 6


state 45:

	dec : vardec .  (reduce by rule 5)



	.	reduce by rule 5


state 46:

	dec : tydec .  (reduce by rule 4)



	.	reduce by rule 4


state 47:

	decs : decs dec .  (reduce by rule 2)



	.	reduce by rule 2


state 48:

	tydec : TYPE ID . EQ ty 

	EQ	shift 76


	.	error


state 49:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 78
	ASSIGN	shift 77


	.	error


state 50:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 79


	.	error


state 51:

	decs : decs . dec 
	letstm : LET decs . IN expseq END 

	IN	shift 80
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	dec	goto 47
	tydec	goto 46
	vardec	goto 45
	fundec	goto 44

	.	error


state 52:

	forstm : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 81


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp . DO exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32
	DO	shift 82


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp . THEN exp 
	ifthenelse : IF exp . THEN exp ELSE exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32
	THEN	shift 83


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : MINUS exp .  (reduce by rule 41)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 41


state 56:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 84


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq : exp . expseq2 
	expseq : exp .  (reduce by rule 55)

	SEMICOLON	shift 86
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	expseq2	goto 85

	.	reduce by rule 55


state 58:

	recordcreate : ID LBRACE . recordinputs RBRACE 

	ID	shift 88

	recordinputs	goto 87

	.	reduce by rule 69


state 59:

	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 89
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 60:

	funcall : ID LPAREN . funinputs RPAREN 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 91
	lvalue	goto 9
	funcall	goto 8
	funinputs	goto 90
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 62

error:  state 61: shift/reduce conflict (shift OR, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift AND, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift GE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift GT, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift LE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift LT, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift NEQ, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift EQ, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift DIVIDE, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift TIMES, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift MINUS, reduce by rule 32)
error:  state 61: shift/reduce conflict (shift PLUS, reduce by rule 32)

state 61:

	exp : lvalue ASSIGN exp .  (reduce by rule 32)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 32


state 62:

	lvalue : lvalue DOT ID .  (reduce by rule 52)



	.	reduce by rule 52


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 92
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 42)
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33


	.	reduce by rule 42


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 43)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34


	.	reduce by rule 43


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 44)
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 45)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 46)
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	RBRACE	reduce by rule 46
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 46
	OR	reduce by rule 46
	THEN	reduce by rule 46
	ELSE	reduce by rule 46
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 69:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 47)
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 47
	OR	reduce by rule 47
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	TO	reduce by rule 47
	DO	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47


	.	error


state 70:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 48)
	exp : exp . EQ exp 

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 48
	OR	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 71:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 49)

	EOF	reduce by rule 49
	COMMA	reduce by rule 49
	SEMICOLON	reduce by rule 49
	RPAREN	reduce by rule 49
	RBRACK	reduce by rule 49
	RBRACE	reduce by rule 49
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 49
	OR	reduce by rule 49
	THEN	reduce by rule 49
	ELSE	reduce by rule 49
	TO	reduce by rule 49
	DO	reduce by rule 49
	IN	reduce by rule 49
	END	reduce by rule 49
	FUNCTION	reduce by rule 49
	VAR	reduce by rule 49
	TYPE	reduce by rule 49


	.	error


state 72:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 40)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 40


state 73:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 39)
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 39


state 74:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 38)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 41
	DIVIDE	shift 40


	.	reduce by rule 38


state 75:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 37)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 41
	DIVIDE	shift 40


	.	reduce by rule 37


state 76:

	tydec : TYPE ID EQ . ty 

	ID	shift 96
	LBRACE	shift 95
	ARRAY	shift 94

	ty	goto 93

	.	error


state 77:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 97
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 78:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 98


	.	error


state 79:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 100

	tyfields	goto 99

	.	reduce by rule 11


state 80:

	letstm : LET decs IN . expseq END 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 57
	lvalue	goto 9
	expseq	goto 101
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 56


state 81:

	forstm : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 102
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 82:

	whilestm : WHILE exp DO . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 103
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 83:

	ifthen : IF exp THEN . exp 
	ifthenelse : IF exp THEN . exp ELSE exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 104
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 84:

	exp : LPAREN expseq RPAREN .  (reduce by rule 50)



	.	reduce by rule 50


state 85:

	expseq : exp expseq2 .  (reduce by rule 54)



	.	reduce by rule 54


state 86:

	expseq2 : SEMICOLON . exp 
	expseq2 : SEMICOLON . exp expseq2 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 105
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 87:

	recordcreate : ID LBRACE recordinputs . RBRACE 

	RBRACE	shift 106


	.	error


state 88:

	recordinputs : ID . EQ exp recordinputs2 
	recordinputs : ID . EQ exp 

	EQ	shift 107


	.	error


state 89:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 108
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	error


state 90:

	funcall : ID LPAREN funinputs . RPAREN 

	RPAREN	shift 109


	.	error


state 91:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs : exp . funinputs2 
	funinputs : exp .  (reduce by rule 61)

	COMMA	shift 111
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	funinputs2	goto 110

	.	reduce by rule 61


state 92:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 53)



	.	reduce by rule 53


state 93:

	tydec : TYPE ID EQ ty .  (reduce by rule 7)



	.	reduce by rule 7


state 94:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 95:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 100

	tyfields	goto 113

	.	reduce by rule 11


state 96:

	ty : ID .  (reduce by rule 8)



	.	reduce by rule 8

error:  state 97: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 16)

state 97:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 16)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 16


state 98:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 99:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 115


	.	error


state 100:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID tyfields2 

	COLON	shift 116


	.	error


state 101:

	letstm : LET decs IN expseq . END 

	END	shift 117


	.	error


state 102:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32
	TO	shift 118


	.	error

error:  state 103: shift/reduce conflict (shift OR, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift AND, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift GE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift GT, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift LE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift LT, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift NEQ, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift EQ, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift DIVIDE, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift TIMES, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift MINUS, reduce by rule 74)
error:  state 103: shift/reduce conflict (shift PLUS, reduce by rule 74)

state 103:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp DO exp .  (reduce by rule 74)

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 74

error:  state 104: shift/reduce conflict (shift ELSE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift OR, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift AND, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift GE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift GT, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift LE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift LT, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift NEQ, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift EQ, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift DIVIDE, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift TIMES, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift MINUS, reduce by rule 73)
error:  state 104: shift/reduce conflict (shift PLUS, reduce by rule 73)

state 104:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp THEN exp .  (reduce by rule 73)
	ifthenelse : IF exp THEN exp . ELSE exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32
	ELSE	shift 119


	.	reduce by rule 73


state 105:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq2 : SEMICOLON exp .  (reduce by rule 57)
	expseq2 : SEMICOLON exp . expseq2 

	SEMICOLON	shift 86
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	expseq2	goto 120

	.	reduce by rule 57


state 106:

	recordcreate : ID LBRACE recordinputs RBRACE .  (reduce by rule 66)



	.	reduce by rule 66


state 107:

	recordinputs : ID EQ . exp recordinputs2 
	recordinputs : ID EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 121
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 108:

	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 122


	.	error


state 109:

	funcall : ID LPAREN funinputs RPAREN .  (reduce by rule 59)



	.	reduce by rule 59


state 110:

	funinputs : exp funinputs2 .  (reduce by rule 60)



	.	reduce by rule 60


state 111:

	funinputs2 : COMMA . exp 
	funinputs2 : COMMA . exp funinputs2 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 123
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 112:

	ty : ARRAY OF . ID 

	ID	shift 124


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 125


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 126
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 128
	EQ	shift 127


	.	error


state 116:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID tyfields2 

	ID	shift 129


	.	error


state 117:

	letstm : LET decs IN expseq END .  (reduce by rule 76)



	.	reduce by rule 76


state 118:

	forstm : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 130
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 119:

	ifthenelse : IF exp THEN exp ELSE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 131
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 120:

	expseq2 : SEMICOLON exp expseq2 .  (reduce by rule 58)



	.	reduce by rule 58


state 121:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	recordinputs : ID EQ exp . recordinputs2 
	recordinputs : ID EQ exp .  (reduce by rule 68)

	COMMA	shift 133
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	recordinputs2	goto 132

	.	reduce by rule 68


state 122:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 134
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 123:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs2 : COMMA exp .  (reduce by rule 63)
	funinputs2 : COMMA exp . funinputs2 

	COMMA	shift 111
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	funinputs2	goto 135

	.	reduce by rule 63


state 124:

	ty : ARRAY OF ID .  (reduce by rule 10)



	.	reduce by rule 10


state 125:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 9)



	.	reduce by rule 9

error:  state 126: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 17)

state 126:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 17)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 17


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 136
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 137


	.	error


state 129:

	tyfields : ID COLON ID .  (reduce by rule 12)
	tyfields : ID COLON ID . tyfields2 

	COMMA	shift 139

	tyfields2	goto 138

	.	reduce by rule 12


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32
	DO	shift 140


	.	error

error:  state 131: shift/reduce conflict (shift OR, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift AND, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift GE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift GT, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift LE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift LT, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift NEQ, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift EQ, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift DIVIDE, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift TIMES, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift MINUS, reduce by rule 72)
error:  state 131: shift/reduce conflict (shift PLUS, reduce by rule 72)

state 131:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthenelse : IF exp THEN exp ELSE exp .  (reduce by rule 72)

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 72


state 132:

	recordinputs : ID EQ exp recordinputs2 .  (reduce by rule 67)



	.	reduce by rule 67


state 133:

	recordinputs2 : COMMA . ID EQ exp 
	recordinputs2 : COMMA . ID EQ exp recordinputs2 

	ID	shift 141


	.	error

error:  state 134: shift/reduce conflict (shift OR, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift AND, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 65)

state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 65)

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 65


state 135:

	funinputs2 : COMMA exp funinputs2 .  (reduce by rule 64)



	.	reduce by rule 64


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 18)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 142


	.	error


state 138:

	tyfields : ID COLON ID tyfields2 .  (reduce by rule 13)



	.	reduce by rule 13


state 139:

	tyfields2 : COMMA . ID COLON ID 
	tyfields2 : COMMA . ID COLON ID tyfields2 

	ID	shift 143


	.	error


state 140:

	forstm : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 144
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 141:

	recordinputs2 : COMMA ID . EQ exp 
	recordinputs2 : COMMA ID . EQ exp recordinputs2 

	EQ	shift 145


	.	error


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 146
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 143:

	tyfields2 : COMMA ID . COLON ID 
	tyfields2 : COMMA ID . COLON ID tyfields2 

	COLON	shift 147


	.	error

error:  state 144: shift/reduce conflict (shift OR, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift AND, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift GE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift GT, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift LE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift LT, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift NEQ, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift EQ, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift DIVIDE, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift TIMES, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift MINUS, reduce by rule 75)
error:  state 144: shift/reduce conflict (shift PLUS, reduce by rule 75)

state 144:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 75)

	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32


	.	reduce by rule 75


state 145:

	recordinputs2 : COMMA ID EQ . exp 
	recordinputs2 : COMMA ID EQ . exp recordinputs2 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18
	FUNCTION	shift 17
	VAR	shift 16
	TYPE	shift 15

	tydec	goto 13
	vardec	goto 12
	fundec	goto 11
	exp	goto 148
	lvalue	goto 9
	funcall	goto 8
	arraycreate	goto 7
	recordcreate	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 146:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 19)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	AND	reduce by rule 19
	OR	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 147:

	tyfields2 : COMMA ID COLON . ID 
	tyfields2 : COMMA ID COLON . ID tyfields2 

	ID	shift 149


	.	error


state 148:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	recordinputs2 : COMMA ID EQ exp .  (reduce by rule 70)
	recordinputs2 : COMMA ID EQ exp . recordinputs2 

	COMMA	shift 133
	PLUS	shift 43
	MINUS	shift 42
	TIMES	shift 41
	DIVIDE	shift 40
	EQ	shift 39
	NEQ	shift 38
	LT	shift 37
	LE	shift 36
	GT	shift 35
	GE	shift 34
	AND	shift 33
	OR	shift 32

	recordinputs2	goto 150

	.	reduce by rule 70


state 149:

	tyfields2 : COMMA ID COLON ID .  (reduce by rule 14)
	tyfields2 : COMMA ID COLON ID . tyfields2 

	COMMA	shift 139

	tyfields2	goto 151

	.	reduce by rule 14


state 150:

	recordinputs2 : COMMA ID EQ exp recordinputs2 .  (reduce by rule 71)



	.	reduce by rule 71


state 151:

	tyfields2 : COMMA ID COLON ID tyfields2 .  (reduce by rule 15)



	.	reduce by rule 15


state 152:


	EOF	accept


	.	error

568 of 1184 action table entries left after compaction
507 goto table entries
