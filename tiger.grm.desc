
state 0:

	program : . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	program	goto 143
	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 8
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 1:

	exp : let .  (reduce by rule 19)



	.	reduce by rule 19


state 2:

	exp : loop .  (reduce by rule 20)



	.	reduce by rule 20


state 3:

	exp : if .  (reduce by rule 21)



	.	reduce by rule 21


state 4:

	exp : recordcreate .  (reduce by rule 29)



	.	reduce by rule 29


state 5:

	exp : arraycreate .  (reduce by rule 28)



	.	reduce by rule 28


state 6:

	exp : funcall .  (reduce by rule 23)



	.	reduce by rule 23


state 7:

	exp : lvalue .  (reduce by rule 26)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 29
	DOT	shift 28
	ASSIGN	shift 27


	.	reduce by rule 26


state 8:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 0


state 9:

	dec : fundec .  (reduce by rule 5)



	.	reduce by rule 5


state 10:

	dec : vardec .  (reduce by rule 4)



	.	reduce by rule 4


state 11:

	dec : tydec .  (reduce by rule 3)



	.	reduce by rule 3


state 12:

	exp : dec .  (reduce by rule 22)



	.	reduce by rule 22


state 13:

	tydec : TYPE . ID EQ ty 

	ID	shift 42


	.	error


state 14:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 43


	.	error


state 15:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 44


	.	error


state 16:

	exp : NIL .  (reduce by rule 30)



	.	reduce by rule 30


state 17:

	exp : BREAK .  (reduce by rule 31)



	.	reduce by rule 31


state 18:

	let : LET . decs IN expseq END 


	decs	goto 45

	.	reduce by rule 2


state 19:

	loop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 46


	.	error


state 20:

	loop : WHILE . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 47
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 21:

	if : IF . exp THEN exp ELSE exp 
	if : IF . exp THEN exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 48
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 22:

	exp : MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 49
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 23:

	exp : LPAREN . expseq RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 51
	lvalue	goto 7
	expseq	goto 50
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	reduce by rule 52


state 24:

	exp : STRING .  (reduce by rule 25)



	.	reduce by rule 25


state 25:

	exp : INT .  (reduce by rule 24)



	.	reduce by rule 24


state 26:

	lvalue : ID .  (reduce by rule 46)
	lvalue : ID . LBRACK exp RBRACK 
	funcall : ID . LPAREN funinputs RPAREN 
	funcall : ID . LPAREN RPAREN 
	arraycreate : ID . LBRACK exp RBRACK OF exp 
	recordcreate : ID . LBRACE recordinputs RBRACE 
	recordcreate : ID . LBRACE RBRACE 

	LPAREN	shift 54
	LBRACK	shift 53
	LBRACE	shift 52


	.	reduce by rule 46


state 27:

	exp : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 55
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 28:

	lvalue : lvalue DOT . ID 

	ID	shift 56


	.	error


state 29:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 57
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 30:

	exp : exp OR . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 58
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 31:

	exp : exp AND . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 59
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 32:

	exp : exp GE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 60
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 33:

	exp : exp GT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 61
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 34:

	exp : exp LE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 62
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 35:

	exp : exp LT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 63
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 36:

	exp : exp NEQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 64
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 37:

	exp : exp EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 65
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 38:

	exp : exp DIVIDE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 66
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 39:

	exp : exp TIMES . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 67
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 40:

	exp : exp MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 68
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 41:

	exp : exp PLUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 69
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 42:

	tydec : TYPE ID . EQ ty 

	EQ	shift 70


	.	error


state 43:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 72
	ASSIGN	shift 71


	.	error


state 44:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 73


	.	error


state 45:

	decs : decs . dec 
	let : LET decs . IN expseq END 

	IN	shift 75
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 74
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9

	.	error


state 46:

	loop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 76


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	loop : WHILE exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 77


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	if : IF exp . THEN exp ELSE exp 
	if : IF exp . THEN exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 78


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : MINUS exp .  (reduce by rule 36)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 36


state 50:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 79


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq : exp . expseq2 
	expseq : exp .  (reduce by rule 51)

	SEMICOLON	shift 81
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	expseq2	goto 80

	.	reduce by rule 51


state 52:

	recordcreate : ID LBRACE . recordinputs RBRACE 
	recordcreate : ID LBRACE . RBRACE 

	ID	shift 84
	RBRACE	shift 83

	recordinputs	goto 82

	.	error


state 53:

	lvalue : ID LBRACK . exp RBRACK 
	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 85
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 54:

	funcall : ID LPAREN . funinputs RPAREN 
	funcall : ID LPAREN . RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	RPAREN	shift 88
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 87
	lvalue	goto 7
	funcall	goto 6
	funinputs	goto 86
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 55:

	exp : lvalue ASSIGN exp .  (reduce by rule 27)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 27


state 56:

	lvalue : lvalue DOT ID .  (reduce by rule 47)



	.	reduce by rule 47


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 89
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 37)
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31


	.	reduce by rule 37


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 38)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32


	.	reduce by rule 38


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 39)
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	RBRACE	reduce by rule 39
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 40)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	RBRACE	reduce by rule 40
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 41)
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	RBRACE	reduce by rule 41
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 42)
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	RBRACE	reduce by rule 42
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 43)
	exp : exp . EQ exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 44)

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 35)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 35


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 34)
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 34


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 33)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 33


state 69:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 32)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 32


state 70:

	tydec : TYPE ID EQ . ty 

	ID	shift 93
	LBRACE	shift 92
	ARRAY	shift 91

	ty	goto 90

	.	error


state 71:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 94
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 72:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 95


	.	error


state 73:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 97

	tyfields	goto 96

	.	reduce by rule 10


state 74:

	decs : decs dec .  (reduce by rule 1)



	.	reduce by rule 1


state 75:

	let : LET decs IN . expseq END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 51
	lvalue	goto 7
	expseq	goto 98
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	reduce by rule 52


state 76:

	loop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 99
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 77:

	loop : WHILE exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 100
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 78:

	if : IF exp THEN . exp ELSE exp 
	if : IF exp THEN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 101
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 79:

	exp : LPAREN expseq RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 80:

	expseq : exp expseq2 .  (reduce by rule 50)



	.	reduce by rule 50


state 81:

	expseq2 : SEMICOLON . exp 
	expseq2 : SEMICOLON . exp expseq2 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 102
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 82:

	recordcreate : ID LBRACE recordinputs . RBRACE 

	RBRACE	shift 103


	.	error


state 83:

	recordcreate : ID LBRACE RBRACE .  (reduce by rule 61)



	.	reduce by rule 61


state 84:

	recordinputs : ID . EQ exp COMMA recordinputs 
	recordinputs : ID . EQ exp 

	EQ	shift 104


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	lvalue : ID LBRACK exp . RBRACK 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 105
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 86:

	funcall : ID LPAREN funinputs . RPAREN 

	RPAREN	shift 106


	.	error


state 87:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs : exp . COMMA funinputs 
	funinputs : exp .  (reduce by rule 58)

	COMMA	shift 107
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 58


state 88:

	funcall : ID LPAREN RPAREN .  (reduce by rule 56)



	.	reduce by rule 56


state 89:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 48)



	.	reduce by rule 48


state 90:

	tydec : TYPE ID EQ ty .  (reduce by rule 6)



	.	reduce by rule 6


state 91:

	ty : ARRAY . OF ID 

	OF	shift 108


	.	error


state 92:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 97

	tyfields	goto 109

	.	reduce by rule 10


state 93:

	ty : ID .  (reduce by rule 7)



	.	reduce by rule 7


state 94:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 15)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 15


state 95:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 110


	.	error


state 96:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 111


	.	error


state 97:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID tyfields2 

	COLON	shift 112


	.	error


state 98:

	let : LET decs IN expseq . END 

	END	shift 113


	.	error


state 99:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	loop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 114


	.	error


state 100:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	loop : WHILE exp DO exp .  (reduce by rule 66)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 66


state 101:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	if : IF exp THEN exp . ELSE exp 
	if : IF exp THEN exp .  (reduce by rule 65)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 115


	.	reduce by rule 65


state 102:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq2 : SEMICOLON exp .  (reduce by rule 53)
	expseq2 : SEMICOLON exp . expseq2 

	SEMICOLON	shift 81
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	expseq2	goto 116

	.	reduce by rule 53


state 103:

	recordcreate : ID LBRACE recordinputs RBRACE .  (reduce by rule 60)



	.	reduce by rule 60


state 104:

	recordinputs : ID EQ . exp COMMA recordinputs 
	recordinputs : ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 117
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 105:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 49)
	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 118


	.	reduce by rule 49


state 106:

	funcall : ID LPAREN funinputs RPAREN .  (reduce by rule 55)



	.	reduce by rule 55


state 107:

	funinputs : exp COMMA . funinputs 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 87
	lvalue	goto 7
	funcall	goto 6
	funinputs	goto 119
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 108:

	ty : ARRAY OF . ID 

	ID	shift 120


	.	error


state 109:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 121


	.	error


state 110:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 122
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 111:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 124
	EQ	shift 123


	.	error


state 112:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID tyfields2 

	ID	shift 125


	.	error


state 113:

	let : LET decs IN expseq END .  (reduce by rule 68)



	.	reduce by rule 68


state 114:

	loop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 126
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 115:

	if : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 127
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 116:

	expseq2 : SEMICOLON exp expseq2 .  (reduce by rule 54)



	.	reduce by rule 54


state 117:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	recordinputs : ID EQ exp . COMMA recordinputs 
	recordinputs : ID EQ exp .  (reduce by rule 63)

	COMMA	shift 128
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 63


state 118:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 129
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 119:

	funinputs : exp COMMA funinputs .  (reduce by rule 57)



	.	reduce by rule 57


state 120:

	ty : ARRAY OF ID .  (reduce by rule 9)



	.	reduce by rule 9


state 121:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 8)



	.	reduce by rule 8


state 122:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 16)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 16


state 123:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 130
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 124:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 131


	.	error


state 125:

	tyfields : ID COLON ID .  (reduce by rule 11)
	tyfields : ID COLON ID . tyfields2 

	COMMA	shift 133

	tyfields2	goto 132

	.	reduce by rule 11


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	loop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 134


	.	error


state 127:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	if : IF exp THEN exp ELSE exp .  (reduce by rule 64)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 64


state 128:

	recordinputs : ID EQ exp COMMA . recordinputs 

	ID	shift 84

	recordinputs	goto 135

	.	error


state 129:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 59)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 59


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 17)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	RBRACE	reduce by rule 17
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 136


	.	error


state 132:

	tyfields : ID COLON ID tyfields2 .  (reduce by rule 12)



	.	reduce by rule 12


state 133:

	tyfields2 : COMMA . ID COLON ID 
	tyfields2 : COMMA . ID COLON ID tyfields2 

	ID	shift 137


	.	error


state 134:

	loop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 138
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 135:

	recordinputs : ID EQ exp COMMA recordinputs .  (reduce by rule 62)



	.	reduce by rule 62


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 139
	lvalue	goto 7
	funcall	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	if	goto 3
	loop	goto 2
	let	goto 1

	.	error


state 137:

	tyfields2 : COMMA ID . COLON ID 
	tyfields2 : COMMA ID . COLON ID tyfields2 

	COLON	shift 140


	.	error


state 138:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	loop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 67)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 67


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 18)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 140:

	tyfields2 : COMMA ID COLON . ID 
	tyfields2 : COMMA ID COLON . ID tyfields2 

	ID	shift 141


	.	error


state 141:

	tyfields2 : COMMA ID COLON ID .  (reduce by rule 13)
	tyfields2 : COMMA ID COLON ID . tyfields2 

	COMMA	shift 133

	tyfields2	goto 142

	.	reduce by rule 13


state 142:

	tyfields2 : COMMA ID COLON ID tyfields2 .  (reduce by rule 14)



	.	reduce by rule 14


state 143:


	EOF	accept


	.	error

526 of 1133 action table entries left after compaction
451 goto table entries
