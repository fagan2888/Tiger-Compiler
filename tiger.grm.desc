26 reduce/reduce conflicts
145 shift/reduce conflicts
2 rules not reduced

warning: rule <expseq2 : > will never be reduced
warning: rule <funinputs2 : > will never be reduced
error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TYPE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on VAR
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on FUNCTION
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on END
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on IN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on DO
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TO
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on ELSE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on THEN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on OR
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on AND
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on GE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on GT
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on LE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on LT
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on NEQ
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on EQ
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on DIVIDE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TIMES
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on MINUS
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on PLUS
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on RBRACK
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on RPAREN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on SEMICOLON
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on COMMA
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on EOF
error:  state 23: shift/reduce conflict (shift LBRACK, reduce by rule 46)
error:  state 51: shift/reduce conflict (shift TYPE, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift VAR, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift FUNCTION, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift NIL, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift BREAK, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift LET, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift FOR, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift WHILE, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift IF, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift INT, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift ID, reduce by rule 58)
error:  state 52: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift GE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift GT, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift LE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift LT, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift NEQ, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift EQ, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift PLUS, reduce by rule 30)
error:  state 71: shift/reduce conflict (shift TYPE, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift VAR, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift FUNCTION, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift NIL, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift BREAK, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift LET, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift FOR, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift WHILE, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift IF, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift INT, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift ID, reduce by rule 52)
error:  state 84: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 14)
error:  state 92: shift/reduce conflict (shift OR, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 61)
error:  state 93: shift/reduce conflict (shift ELSE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift OR, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift AND, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift GE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift GT, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift LE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift LT, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift NEQ, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift EQ, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift DIVIDE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift TIMES, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift MINUS, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift PLUS, reduce by rule 60)
error:  state 97: shift/reduce conflict (shift TYPE, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift VAR, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift FUNCTION, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift NIL, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift BREAK, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift LET, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift FOR, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift WHILE, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift IF, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift INT, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift ID, reduce by rule 58)
error:  state 105: shift/reduce conflict (shift TYPE, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift VAR, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift FUNCTION, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift NIL, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift BREAK, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift LET, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift FOR, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift WHILE, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift IF, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift INT, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift ID, reduce by rule 52)
error:  state 112: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift PLUS, reduce by rule 15)
error:  state 119: shift/reduce conflict (shift OR, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift GE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift GT, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift LE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift LT, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift NEQ, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift EQ, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 59)
error:  state 120: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift PLUS, reduce by rule 31)
error:  state 129: shift/reduce conflict (shift OR, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift AND, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift GE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift GT, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift LE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift LT, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift NEQ, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift EQ, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift DIVIDE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift TIMES, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift MINUS, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift PLUS, reduce by rule 62)
error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)

state 0:

	program : . exp 
	program : . decs 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	program	goto 130
	decs	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 8
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 3


state 1:

	exp : letstm .  (reduce by rule 18)



	.	reduce by rule 18


state 2:

	exp : forstm .  (reduce by rule 19)



	.	reduce by rule 19


state 3:

	exp : whilestm .  (reduce by rule 20)



	.	reduce by rule 20


state 4:

	exp : ifthenelse .  (reduce by rule 22)



	.	reduce by rule 22


state 5:

	exp : ifthen .  (reduce by rule 21)



	.	reduce by rule 21


state 6:

	exp : funcall .  (reduce by rule 25)



	.	reduce by rule 25


state 7:

	exp : lvalue .  (reduce by rule 29)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 26
	DOT	shift 25
	ASSIGN	shift 24


	.	reduce by rule 29


state 8:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 0


state 9:

	exp : fundec .  (reduce by rule 24)



	.	reduce by rule 24


state 10:

	exp : vardec .  (reduce by rule 26)



	.	reduce by rule 26


state 11:

	exp : tydec .  (reduce by rule 27)



	.	reduce by rule 27


state 12:

	program : decs .  (reduce by rule 1)
	decs : decs . dec 

	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 42
	tydec	goto 41
	vardec	goto 40
	fundec	goto 39

	.	reduce by rule 1


state 13:

	tydec : TYPE . ID EQ ty 

	ID	shift 43


	.	error


state 14:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 44


	.	error


state 15:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 45


	.	error


state 16:

	exp : NIL .  (reduce by rule 32)



	.	reduce by rule 32


state 17:

	exp : BREAK .  (reduce by rule 33)



	.	reduce by rule 33


state 18:

	letstm : LET . decs IN expseq END 


	decs	goto 46

	.	reduce by rule 3


state 19:

	forstm : FOR . ID COLON ASSIGN exp TO exp DO exp 

	ID	shift 47


	.	error


state 20:

	whilestm : WHILE . exp DO exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 48
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 21:

	ifthen : IF . exp THEN exp 
	ifthenelse : IF . exp THEN exp ELSE exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 49
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 22:

	exp : INT .  (reduce by rule 28)



	.	reduce by rule 28

error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TYPE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on VAR
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on FUNCTION
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on END
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on IN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on DO
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TO
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on ELSE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on THEN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on OR
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on AND
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on GE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on GT
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on LE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on LT
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on NEQ
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on EQ
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on DIVIDE
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on TIMES
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on MINUS
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on PLUS
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on RBRACK
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on RPAREN
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on SEMICOLON
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on COMMA
error:  state 23: reduce/reduce conflict between rule 46 and rule 23 on EOF
error:  state 23: shift/reduce conflict (shift LBRACK, reduce by rule 46)

state 23:

	exp : ID .  (reduce by rule 23)
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 46)
	funcall : ID . LPAREN funinputs RPAREN 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	LPAREN	shift 51
	RPAREN	reduce by rule 23
	LBRACK	shift 50
	RBRACK	reduce by rule 23
	DOT	reduce by rule 46
	PLUS	reduce by rule 23
	MINUS	reduce by rule 23
	TIMES	reduce by rule 23
	DIVIDE	reduce by rule 23
	EQ	reduce by rule 23
	NEQ	reduce by rule 23
	LT	reduce by rule 23
	LE	reduce by rule 23
	GT	reduce by rule 23
	GE	reduce by rule 23
	AND	reduce by rule 23
	OR	reduce by rule 23
	ASSIGN	reduce by rule 46
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 24:

	exp : lvalue ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 52
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 25:

	lvalue : lvalue DOT . ID 

	ID	shift 53


	.	error


state 26:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 54
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 27:

	exp : exp OR . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 55
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 28:

	exp : exp AND . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 56
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 29:

	exp : exp GE . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 57
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 30:

	exp : exp GT . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 58
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 31:

	exp : exp LE . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 59
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 32:

	exp : exp LT . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 60
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 33:

	exp : exp NEQ . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 61
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 34:

	exp : exp EQ . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 62
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 35:

	exp : exp DIVIDE . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 63
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 36:

	exp : exp TIMES . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 64
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 37:

	exp : exp MINUS . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 65
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 38:

	exp : exp PLUS . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 66
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 39:

	dec : fundec .  (reduce by rule 6)



	.	reduce by rule 6


state 40:

	dec : vardec .  (reduce by rule 5)



	.	reduce by rule 5


state 41:

	dec : tydec .  (reduce by rule 4)



	.	reduce by rule 4


state 42:

	decs : decs dec .  (reduce by rule 2)



	.	reduce by rule 2


state 43:

	tydec : TYPE ID . EQ ty 

	EQ	shift 67


	.	error


state 44:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 69
	ASSIGN	shift 68


	.	error


state 45:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 70


	.	error


state 46:

	decs : decs . dec 
	letstm : LET decs . IN expseq END 

	IN	shift 71
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 42
	tydec	goto 41
	vardec	goto 40
	fundec	goto 39

	.	error


state 47:

	forstm : FOR ID . COLON ASSIGN exp TO exp DO exp 

	COLON	shift 72


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 73


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp . THEN exp 
	ifthenelse : IF exp . THEN exp ELSE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 74


	.	error


state 50:

	exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 75
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 51: shift/reduce conflict (shift TYPE, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift VAR, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift FUNCTION, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift NIL, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift BREAK, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift LET, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift FOR, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift WHILE, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift IF, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift INT, reduce by rule 58)
error:  state 51: shift/reduce conflict (shift ID, reduce by rule 58)

state 51:

	funcall : ID LPAREN . funinputs RPAREN 

	ID	shift 23
	INT	shift 22
	RPAREN	reduce by rule 55
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 78
	lvalue	goto 7
	funcall	goto 6
	funinputs	goto 77
	funinputs2	goto 76
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 52: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift GE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift GT, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift LE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift LT, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift NEQ, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift EQ, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 52: shift/reduce conflict (shift PLUS, reduce by rule 30)

state 52:

	exp : lvalue ASSIGN exp .  (reduce by rule 30)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 30


state 53:

	lvalue : lvalue DOT ID .  (reduce by rule 47)



	.	reduce by rule 47


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 79
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 38)
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28


	.	reduce by rule 38


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 39)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 39


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 40)
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 41)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 42)
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 43)
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 44)
	exp : exp . EQ exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 45)

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 37)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 37


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 36)
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 36


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 35)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 35


state 66:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 34)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 34


state 67:

	tydec : TYPE ID EQ . ty 

	ID	shift 83
	LBRACE	shift 82
	ARRAY	shift 81

	ty	goto 80

	.	error


state 68:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 84
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 69:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 85


	.	error


state 70:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 87

	tyfields	goto 86

	.	reduce by rule 11

error:  state 71: shift/reduce conflict (shift TYPE, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift VAR, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift FUNCTION, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift NIL, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift BREAK, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift LET, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift FOR, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift WHILE, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift IF, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift INT, reduce by rule 52)
error:  state 71: shift/reduce conflict (shift ID, reduce by rule 52)

state 71:

	letstm : LET decs IN . expseq END 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	END	reduce by rule 51
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 90
	lvalue	goto 7
	expseq	goto 89
	expseq2	goto 88
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 72:

	forstm : FOR ID COLON . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 91


	.	error


state 73:

	whilestm : WHILE exp DO . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 92
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 74:

	ifthen : IF exp THEN . exp 
	ifthenelse : IF exp THEN . exp ELSE exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 93
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 75:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	RBRACK	shift 94
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 76:

	funinputs : funinputs2 . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 95
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 77:

	funcall : ID LPAREN funinputs . RPAREN 

	RPAREN	shift 96


	.	error


state 78:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs2 : exp . COMMA funinputs2 

	COMMA	shift 97
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 79:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 48)



	.	reduce by rule 48


state 80:

	tydec : TYPE ID EQ ty .  (reduce by rule 7)



	.	reduce by rule 7


state 81:

	ty : ARRAY . OF ID 

	OF	shift 98


	.	error


state 82:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 87

	tyfields	goto 99

	.	reduce by rule 11


state 83:

	ty : ID .  (reduce by rule 8)



	.	reduce by rule 8

error:  state 84: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 84:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 14)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 14


state 85:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 100


	.	error


state 86:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 101


	.	error


state 87:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 102


	.	error


state 88:

	expseq : expseq2 . exp 
	expseq : expseq2 . exp SEMICOLON 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 103
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 89:

	letstm : LET decs IN expseq . END 

	END	shift 104


	.	error


state 90:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq2 : exp . SEMICOLON expseq2 

	SEMICOLON	shift 105
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 91:

	forstm : FOR ID COLON ASSIGN . exp TO exp DO exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 106
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 92: shift/reduce conflict (shift OR, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift AND, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift GE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift GT, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift LE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift LT, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift NEQ, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift EQ, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift DIVIDE, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift TIMES, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift MINUS, reduce by rule 61)
error:  state 92: shift/reduce conflict (shift PLUS, reduce by rule 61)

state 92:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp DO exp .  (reduce by rule 61)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 61

error:  state 93: shift/reduce conflict (shift ELSE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift OR, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift AND, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift GE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift GT, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift LE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift LT, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift NEQ, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift EQ, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift DIVIDE, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift TIMES, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift MINUS, reduce by rule 60)
error:  state 93: shift/reduce conflict (shift PLUS, reduce by rule 60)

state 93:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp THEN exp .  (reduce by rule 60)
	ifthenelse : IF exp THEN exp . ELSE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 107


	.	reduce by rule 60


state 94:

	exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 108


	.	error


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs : funinputs2 exp .  (reduce by rule 56)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 56


state 96:

	funcall : ID LPAREN funinputs RPAREN .  (reduce by rule 54)



	.	reduce by rule 54

error:  state 97: shift/reduce conflict (shift TYPE, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift VAR, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift FUNCTION, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift NIL, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift BREAK, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift LET, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift FOR, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift WHILE, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift IF, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift INT, reduce by rule 58)
error:  state 97: shift/reduce conflict (shift ID, reduce by rule 58)

state 97:

	funinputs2 : exp COMMA . funinputs2 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 78
	lvalue	goto 7
	funcall	goto 6
	funinputs2	goto 109
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 98:

	ty : ARRAY OF . ID 

	ID	shift 110


	.	error


state 99:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 111


	.	error


state 100:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 112
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 101:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 114
	EQ	shift 113


	.	error


state 102:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 115


	.	error


state 103:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq : expseq2 exp .  (reduce by rule 49)
	expseq : expseq2 exp . SEMICOLON 

	SEMICOLON	shift 116
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 49


state 104:

	letstm : LET decs IN expseq END .  (reduce by rule 63)



	.	reduce by rule 63

error:  state 105: shift/reduce conflict (shift TYPE, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift VAR, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift FUNCTION, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift NIL, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift BREAK, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift LET, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift FOR, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift WHILE, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift IF, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift INT, reduce by rule 52)
error:  state 105: shift/reduce conflict (shift ID, reduce by rule 52)

state 105:

	expseq2 : exp SEMICOLON . expseq2 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 90
	lvalue	goto 7
	expseq2	goto 117
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 106:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp . TO exp DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 118


	.	error


state 107:

	ifthenelse : IF exp THEN exp ELSE . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 119
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 108:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 120
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 109:

	funinputs2 : exp COMMA funinputs2 .  (reduce by rule 57)



	.	reduce by rule 57


state 110:

	ty : ARRAY OF ID .  (reduce by rule 10)



	.	reduce by rule 10


state 111:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 9)



	.	reduce by rule 9

error:  state 112: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 112: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 112:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 15)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 15


state 113:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 121
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 114:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 122


	.	error


state 115:

	tyfields : ID COLON ID .  (reduce by rule 12)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 123


	.	reduce by rule 12


state 116:

	expseq : expseq2 exp SEMICOLON .  (reduce by rule 50)



	.	reduce by rule 50


state 117:

	expseq2 : exp SEMICOLON expseq2 .  (reduce by rule 53)



	.	reduce by rule 53


state 118:

	forstm : FOR ID COLON ASSIGN exp TO . exp DO exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 124
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 119: shift/reduce conflict (shift OR, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift GE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift GT, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift LE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift LT, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift NEQ, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift EQ, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 59)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 59)

state 119:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthenelse : IF exp THEN exp ELSE exp .  (reduce by rule 59)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 59

error:  state 120: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 120: shift/reduce conflict (shift PLUS, reduce by rule 31)

state 120:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 31)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 31


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 16)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 125


	.	error


state 123:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 87

	tyfields	goto 126

	.	reduce by rule 11


state 124:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp TO exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 127


	.	error


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 128
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 126:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 13)



	.	reduce by rule 13


state 127:

	forstm : FOR ID COLON ASSIGN exp TO exp DO . exp 

	ID	shift 23
	INT	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 129
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 17)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error

error:  state 129: shift/reduce conflict (shift OR, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift AND, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift GE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift GT, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift LE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift LT, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift NEQ, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift EQ, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift DIVIDE, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift TIMES, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift MINUS, reduce by rule 62)
error:  state 129: shift/reduce conflict (shift PLUS, reduce by rule 62)

state 129:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp TO exp DO exp .  (reduce by rule 62)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 62


state 130:


	EOF	accept


	.	error

541 of 1015 action table entries left after compaction
406 goto table entries
