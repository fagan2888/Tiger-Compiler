
state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	program	goto 147
	exp	goto 9
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 1:

	exp : letstm .  (reduce by rule 13)



	.	reduce by rule 13


state 2:

	exp : loop .  (reduce by rule 11)



	.	reduce by rule 11


state 3:

	exp : ifstm .  (reduce by rule 10)



	.	reduce by rule 10


state 4:

	exp : recordcreate .  (reduce by rule 7)



	.	reduce by rule 7


state 5:

	exp : arraycreate .  (reduce by rule 14)



	.	reduce by rule 14


state 6:

	exp : operation .  (reduce by rule 6)



	.	reduce by rule 6


state 7:

	exp : funcall .  (reduce by rule 5)



	.	reduce by rule 5


state 8:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 23
	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 1


state 9:

	program : exp .  (reduce by rule 0)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 10:

	letstm : LET . decs IN expseq END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 40
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 51


state 11:

	loop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 44


	.	error


state 12:

	loop : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 45
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 13:

	ifstm : IF . exp THEN exp 
	ifstm : IF . exp THEN exp ELSE exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 46
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 14:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 15:

	exp : BREAK .  (reduce by rule 12)



	.	reduce by rule 12


state 16:

	operation : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 47
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 17:

	exp : LPAREN . expseq RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 49
	lvalue	goto 8
	expseq	goto 48
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	reduce by rule 38


state 18:

	exp : STRING .  (reduce by rule 4)



	.	reduce by rule 4


state 19:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 20:

	lvalue : ID .  (reduce by rule 15)
	lvalue : ID . LBRACK exp RBRACK 
	funcall : ID . LPAREN funinputs RPAREN 
	funcall : ID . LPAREN RPAREN 
	arraycreate : ID . LBRACK exp RBRACK OF exp 
	recordcreate : ID . LBRACE recordinputs RBRACE 
	recordcreate : ID . LBRACE RBRACE 

	LPAREN	shift 52
	LBRACK	shift 51
	LBRACE	shift 50


	.	reduce by rule 15


state 21:

	exp : lvalue ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 53
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 22:

	lvalue : lvalue DOT . ID 

	ID	shift 54


	.	error


state 23:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 55
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 24:

	operation : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 56
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 25:

	operation : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 57
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 26:

	operation : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 58
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 27:

	operation : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 59
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 28:

	operation : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 60
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 29:

	operation : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 61
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 30:

	operation : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 62
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 31:

	operation : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 63
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 32:

	operation : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 64
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 33:

	operation : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 65
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 34:

	operation : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 66
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 35:

	operation : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 67
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 36:

	dec : fundec .  (reduce by rule 54)



	.	reduce by rule 54


state 37:

	dec : vardec .  (reduce by rule 53)



	.	reduce by rule 53


state 38:

	dec : tydec .  (reduce by rule 52)



	.	reduce by rule 52


state 39:

	decs : dec . decs 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 68
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 51


state 40:

	letstm : LET decs . IN expseq END 

	IN	shift 69


	.	error


state 41:

	tydec : TYPE . ID EQ ty 
	tydec : TYPE . ID EQ ty tydec 

	ID	shift 70


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 71


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundec 

	ID	shift 72


	.	error


state 44:

	loop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 73


	.	error


state 45:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	loop : WHILE exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 74


	.	error


state 46:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	ifstm : IF exp . THEN exp 
	ifstm : IF exp . THEN exp ELSE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 75


	.	error


state 47:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : MINUS exp .  (reduce by rule 27)
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 



	.	reduce by rule 27


state 48:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 76


	.	error


state 49:

	expseq : exp . expseq2 
	expseq : exp .  (reduce by rule 37)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	SEMICOLON	shift 78
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	expseq2	goto 77

	.	reduce by rule 37


state 50:

	recordcreate : ID LBRACE . recordinputs RBRACE 
	recordcreate : ID LBRACE . RBRACE 

	ID	shift 81
	RBRACE	shift 80

	recordinputs	goto 79

	.	error


state 51:

	lvalue : ID LBRACK . exp RBRACK 
	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 82
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 52:

	funcall : ID LPAREN . funinputs RPAREN 
	funcall : ID LPAREN . RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	RPAREN	shift 85
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 84
	lvalue	goto 8
	funcall	goto 7
	funinputs	goto 83
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 53:

	exp : lvalue ASSIGN exp .  (reduce by rule 9)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 9
	COMMA	reduce by rule 9
	SEMICOLON	reduce by rule 9
	RPAREN	reduce by rule 9
	RBRACK	reduce by rule 9
	RBRACE	reduce by rule 9
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	reduce by rule 9
	VAR	reduce by rule 9
	TYPE	reduce by rule 9
	THEN	reduce by rule 9
	ELSE	reduce by rule 9
	TO	reduce by rule 9
	DO	reduce by rule 9
	IN	reduce by rule 9
	END	reduce by rule 9


	.	error


state 54:

	lvalue : lvalue DOT ID .  (reduce by rule 16)



	.	reduce by rule 16


state 55:

	lvalue : lvalue LBRACK exp . RBRACK 
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	RBRACK	shift 86
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 56:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp OR exp .  (reduce by rule 34)
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25


	.	reduce by rule 34


state 57:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	operation : exp AND exp .  (reduce by rule 35)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 35


state 58:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp GE exp .  (reduce by rule 28)
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 28
	AND	reduce by rule 28
	OR	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28


	.	error


state 59:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp GT exp .  (reduce by rule 29)
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACK	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 29
	AND	reduce by rule 29
	OR	reduce by rule 29
	FUNCTION	reduce by rule 29
	VAR	reduce by rule 29
	TYPE	reduce by rule 29
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29
	IN	reduce by rule 29
	END	reduce by rule 29


	.	error


state 60:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp LE exp .  (reduce by rule 30)
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 30
	COMMA	reduce by rule 30
	SEMICOLON	reduce by rule 30
	RPAREN	reduce by rule 30
	RBRACK	reduce by rule 30
	RBRACE	reduce by rule 30
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 30
	AND	reduce by rule 30
	OR	reduce by rule 30
	FUNCTION	reduce by rule 30
	VAR	reduce by rule 30
	TYPE	reduce by rule 30
	THEN	reduce by rule 30
	ELSE	reduce by rule 30
	TO	reduce by rule 30
	DO	reduce by rule 30
	IN	reduce by rule 30
	END	reduce by rule 30


	.	error


state 61:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp LT exp .  (reduce by rule 31)
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 31
	COMMA	reduce by rule 31
	SEMICOLON	reduce by rule 31
	RPAREN	reduce by rule 31
	RBRACK	reduce by rule 31
	RBRACE	reduce by rule 31
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 31
	AND	reduce by rule 31
	OR	reduce by rule 31
	FUNCTION	reduce by rule 31
	VAR	reduce by rule 31
	TYPE	reduce by rule 31
	THEN	reduce by rule 31
	ELSE	reduce by rule 31
	TO	reduce by rule 31
	DO	reduce by rule 31
	IN	reduce by rule 31
	END	reduce by rule 31


	.	error


state 62:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp NEQ exp .  (reduce by rule 32)
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 32
	COMMA	reduce by rule 32
	SEMICOLON	reduce by rule 32
	RPAREN	reduce by rule 32
	RBRACK	reduce by rule 32
	RBRACE	reduce by rule 32
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 32
	AND	reduce by rule 32
	OR	reduce by rule 32
	FUNCTION	reduce by rule 32
	VAR	reduce by rule 32
	TYPE	reduce by rule 32
	THEN	reduce by rule 32
	ELSE	reduce by rule 32
	TO	reduce by rule 32
	DO	reduce by rule 32
	IN	reduce by rule 32
	END	reduce by rule 32


	.	error


state 63:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp EQ exp .  (reduce by rule 33)
	operation : exp . OR exp 
	operation : exp . AND exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	reduce by rule 33
	AND	reduce by rule 33
	OR	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33


	.	error


state 64:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp DIVIDE exp .  (reduce by rule 26)
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 



	.	reduce by rule 26


state 65:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp TIMES exp .  (reduce by rule 25)
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 



	.	reduce by rule 25


state 66:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp MINUS exp .  (reduce by rule 24)
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 24


state 67:

	operation : exp . PLUS exp 
	operation : exp PLUS exp .  (reduce by rule 23)
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 23


state 68:

	decs : dec decs .  (reduce by rule 50)



	.	reduce by rule 50


state 69:

	letstm : LET decs IN . expseq END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 49
	lvalue	goto 8
	expseq	goto 87
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	reduce by rule 38


state 70:

	tydec : TYPE ID . EQ ty 
	tydec : TYPE ID . EQ ty tydec 

	EQ	shift 88


	.	error


state 71:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 90
	ASSIGN	shift 89


	.	error


state 72:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundec 

	LPAREN	shift 91


	.	error


state 73:

	loop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 92
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 74:

	loop : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 93
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 75:

	ifstm : IF exp THEN . exp 
	ifstm : IF exp THEN . exp ELSE exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 94
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 76:

	exp : LPAREN expseq RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 77:

	expseq : exp expseq2 .  (reduce by rule 36)



	.	reduce by rule 36


state 78:

	expseq2 : SEMICOLON . exp 
	expseq2 : SEMICOLON . exp expseq2 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 95
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 79:

	recordcreate : ID LBRACE recordinputs . RBRACE 

	RBRACE	shift 96


	.	error


state 80:

	recordcreate : ID LBRACE RBRACE .  (reduce by rule 42)



	.	reduce by rule 42


state 81:

	recordinputs : ID . EQ exp 
	recordinputs : ID . EQ exp COMMA recordinputs 

	EQ	shift 97


	.	error


state 82:

	lvalue : ID LBRACK exp . RBRACK 
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 98
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 83:

	funcall : ID LPAREN funinputs . RPAREN 

	RPAREN	shift 99


	.	error


state 84:

	funinputs : exp . COMMA funinputs 
	funinputs : exp .  (reduce by rule 22)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	COMMA	shift 100
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 22


state 85:

	funcall : ID LPAREN RPAREN .  (reduce by rule 20)



	.	reduce by rule 20


state 86:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 17)



	.	reduce by rule 17


state 87:

	letstm : LET decs IN expseq . END 

	END	shift 101


	.	error


state 88:

	tydec : TYPE ID EQ . ty 
	tydec : TYPE ID EQ . ty tydec 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 102

	.	error


state 89:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 106
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 90:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 107


	.	error


state 91:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundec 

	ID	shift 109

	tyfields	goto 108

	.	reduce by rule 60


state 92:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	loop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 110


	.	error


state 93:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	loop : WHILE exp DO exp .  (reduce by rule 47)

	EOF	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	TO	reduce by rule 47
	DO	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47


	.	error


state 94:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	ifstm : IF exp THEN exp .  (reduce by rule 45)
	ifstm : IF exp THEN exp . ELSE exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	shift 111
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45


	.	error


state 95:

	expseq2 : SEMICOLON exp .  (reduce by rule 39)
	expseq2 : SEMICOLON exp . expseq2 
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	SEMICOLON	shift 78
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	expseq2	goto 112

	.	reduce by rule 39


state 96:

	recordcreate : ID LBRACE recordinputs RBRACE .  (reduce by rule 41)



	.	reduce by rule 41


state 97:

	recordinputs : ID EQ . exp 
	recordinputs : ID EQ . exp COMMA recordinputs 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 113
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 98:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 18)
	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 114


	.	reduce by rule 18


state 99:

	funcall : ID LPAREN funinputs RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 100:

	funinputs : exp COMMA . funinputs 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 84
	lvalue	goto 8
	funcall	goto 7
	funinputs	goto 115
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 101:

	letstm : LET decs IN expseq END .  (reduce by rule 49)



	.	reduce by rule 49


state 102:

	tydec : TYPE ID EQ ty .  (reduce by rule 55)
	tydec : TYPE ID EQ ty . tydec 

	TYPE	shift 41

	tydec	goto 116

	.	reduce by rule 55


state 103:

	ty : ARRAY . OF ID 

	OF	shift 117


	.	error


state 104:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 109

	tyfields	goto 118

	.	reduce by rule 60


state 105:

	ty : ID .  (reduce by rule 57)



	.	reduce by rule 57


state 106:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 65)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 65


state 107:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 119


	.	error


state 108:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundec 

	RPAREN	shift 120


	.	error


state 109:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID tyfields2 

	COLON	shift 121


	.	error


state 110:

	loop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 122
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 111:

	ifstm : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 123
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 112:

	expseq2 : SEMICOLON exp expseq2 .  (reduce by rule 40)



	.	reduce by rule 40


state 113:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	recordinputs : ID EQ exp .  (reduce by rule 43)
	recordinputs : ID EQ exp . COMMA recordinputs 

	COMMA	shift 124
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 43


state 114:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 125
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 115:

	funinputs : exp COMMA funinputs .  (reduce by rule 21)



	.	reduce by rule 21


state 116:

	tydec : TYPE ID EQ ty tydec .  (reduce by rule 56)



	.	reduce by rule 56


state 117:

	ty : ARRAY OF . ID 

	ID	shift 126


	.	error


state 118:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 127


	.	error


state 119:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 128
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 120:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundec 

	COLON	shift 130
	EQ	shift 129


	.	error


state 121:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID tyfields2 

	ID	shift 131


	.	error


state 122:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	loop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 132


	.	error


state 123:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	ifstm : IF exp THEN exp ELSE exp .  (reduce by rule 46)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 46


state 124:

	recordinputs : ID EQ exp COMMA . recordinputs 

	ID	shift 81

	recordinputs	goto 133

	.	error


state 125:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 71)

	EOF	reduce by rule 71
	COMMA	reduce by rule 71
	SEMICOLON	reduce by rule 71
	RPAREN	reduce by rule 71
	RBRACK	reduce by rule 71
	RBRACE	reduce by rule 71
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	reduce by rule 71
	VAR	reduce by rule 71
	TYPE	reduce by rule 71
	THEN	reduce by rule 71
	ELSE	reduce by rule 71
	TO	reduce by rule 71
	DO	reduce by rule 71
	IN	reduce by rule 71
	END	reduce by rule 71


	.	error


state 126:

	ty : ARRAY OF ID .  (reduce by rule 59)



	.	reduce by rule 59


state 127:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 58)



	.	reduce by rule 58


state 128:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 66)
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 66


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundec 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 134
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundec 

	ID	shift 135


	.	error


state 131:

	tyfields : ID COLON ID .  (reduce by rule 61)
	tyfields : ID COLON ID . tyfields2 

	COMMA	shift 137

	tyfields2	goto 136

	.	reduce by rule 61


state 132:

	loop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 138
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 133:

	recordinputs : ID EQ exp COMMA recordinputs .  (reduce by rule 44)



	.	reduce by rule 44


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 67)
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundec 
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	shift 43

	fundec	goto 139

	.	reduce by rule 67


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundec 

	EQ	shift 140


	.	error


state 136:

	tyfields : ID COLON ID tyfields2 .  (reduce by rule 62)



	.	reduce by rule 62


state 137:

	tyfields2 : COMMA . ID COLON ID 
	tyfields2 : COMMA . ID COLON ID tyfields2 

	ID	shift 141


	.	error


state 138:

	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 
	loop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 48)

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48


	.	error


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundec .  (reduce by rule 69)



	.	reduce by rule 69


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundec 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	BREAK	shift 15
	NIL	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10

	exp	goto 142
	lvalue	goto 8
	funcall	goto 7
	operation	goto 6
	arraycreate	goto 5
	recordcreate	goto 4
	ifstm	goto 3
	loop	goto 2
	letstm	goto 1

	.	error


state 141:

	tyfields2 : COMMA ID . COLON ID 
	tyfields2 : COMMA ID . COLON ID tyfields2 

	COLON	shift 143


	.	error


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 68)
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundec 
	operation : exp . PLUS exp 
	operation : exp . MINUS exp 
	operation : exp . TIMES exp 
	operation : exp . DIVIDE exp 
	operation : exp . GE exp 
	operation : exp . GT exp 
	operation : exp . LE exp 
	operation : exp . LT exp 
	operation : exp . NEQ exp 
	operation : exp . EQ exp 
	operation : exp . OR exp 
	operation : exp . AND exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	FUNCTION	shift 43

	fundec	goto 144

	.	reduce by rule 68


state 143:

	tyfields2 : COMMA ID COLON . ID 
	tyfields2 : COMMA ID COLON . ID tyfields2 

	ID	shift 145


	.	error


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundec .  (reduce by rule 70)



	.	reduce by rule 70


state 145:

	tyfields2 : COMMA ID COLON ID .  (reduce by rule 63)
	tyfields2 : COMMA ID COLON ID . tyfields2 

	COMMA	shift 137

	tyfields2	goto 146

	.	reduce by rule 63


state 146:

	tyfields2 : COMMA ID COLON ID tyfields2 .  (reduce by rule 64)



	.	reduce by rule 64


state 147:


	EOF	accept


	.	error

574 of 1089 action table entries left after compaction
351 goto table entries
