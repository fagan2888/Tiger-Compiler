101 shift/reduce conflicts

error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)
error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 48)
error:  state 57: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift GE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift GT, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift LE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift LT, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift NEQ, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift EQ, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift PLUS, reduce by rule 30)
error:  state 89: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift OR, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift AND, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift GE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift GT, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift LE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift LT, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift NEQ, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift EQ, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift DIVIDE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift TIMES, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift MINUS, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift PLUS, reduce by rule 64)
error:  state 97: shift/reduce conflict (shift ELSE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift OR, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 63)
error:  state 116: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift PLUS, reduce by rule 15)
error:  state 122: shift/reduce conflict (shift OR, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift AND, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift GE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift GT, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift LE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift LT, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift NEQ, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift EQ, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift DIVIDE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift TIMES, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift MINUS, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift PLUS, reduce by rule 62)
error:  state 123: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 31)
error:  state 134: shift/reduce conflict (shift OR, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift AND, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 65)
error:  state 0: shift/reduce conflict (shift TYPE, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift VAR, reduce by rule 3)
error:  state 0: shift/reduce conflict (shift FUNCTION, reduce by rule 3)

state 0:

	program : . exp 
	program : . decs 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	program	goto 135
	decs	goto 12
	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 8
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 3


state 1:

	exp : letstm .  (reduce by rule 18)



	.	reduce by rule 18


state 2:

	exp : forstm .  (reduce by rule 19)



	.	reduce by rule 19


state 3:

	exp : whilestm .  (reduce by rule 20)



	.	reduce by rule 20


state 4:

	exp : ifthenelse .  (reduce by rule 22)



	.	reduce by rule 22


state 5:

	exp : ifthen .  (reduce by rule 21)



	.	reduce by rule 21


state 6:

	exp : funcall .  (reduce by rule 24)



	.	reduce by rule 24


state 7:

	exp : lvalue .  (reduce by rule 29)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 29
	DOT	shift 28
	ASSIGN	shift 27


	.	reduce by rule 29


state 8:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 0


state 9:

	exp : fundec .  (reduce by rule 23)



	.	reduce by rule 23


state 10:

	exp : vardec .  (reduce by rule 25)



	.	reduce by rule 25


state 11:

	exp : tydec .  (reduce by rule 26)



	.	reduce by rule 26


state 12:

	program : decs .  (reduce by rule 1)
	decs : decs . dec 

	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 45
	tydec	goto 44
	vardec	goto 43
	fundec	goto 42

	.	reduce by rule 1


state 13:

	tydec : TYPE . ID EQ ty 

	ID	shift 46


	.	error


state 14:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 47


	.	error


state 15:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 48


	.	error


state 16:

	exp : NIL .  (reduce by rule 32)



	.	reduce by rule 32


state 17:

	exp : BREAK .  (reduce by rule 33)



	.	reduce by rule 33


state 18:

	letstm : LET . decs IN expseq END 


	decs	goto 49

	.	reduce by rule 3


state 19:

	forstm : FOR . ID COLON ASSIGN exp TO exp DO exp 

	ID	shift 50


	.	error


state 20:

	whilestm : WHILE . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 51
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 21:

	ifthen : IF . exp THEN exp 
	ifthenelse : IF . exp THEN exp ELSE exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 52
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 22:

	exp : MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 53
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 23:

	exp : LPAREN . exp RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 54
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 24:

	exp : STRING .  (reduce by rule 28)



	.	reduce by rule 28


state 25:

	exp : INT .  (reduce by rule 27)



	.	reduce by rule 27

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 48)

state 26:

	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 48)
	funcall : ID . LPAREN funinputs RPAREN 

	LPAREN	shift 56
	LBRACK	shift 55


	.	reduce by rule 48


state 27:

	exp : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 57
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 28:

	lvalue : lvalue DOT . ID 

	ID	shift 58


	.	error


state 29:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 59
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 30:

	exp : exp OR . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 60
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 31:

	exp : exp AND . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 61
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 32:

	exp : exp GE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 62
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 33:

	exp : exp GT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 63
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 34:

	exp : exp LE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 64
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 35:

	exp : exp LT . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 65
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 36:

	exp : exp NEQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 66
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 37:

	exp : exp EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 67
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 38:

	exp : exp DIVIDE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 68
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 39:

	exp : exp TIMES . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 69
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 40:

	exp : exp MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 70
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 41:

	exp : exp PLUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 71
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 42:

	dec : fundec .  (reduce by rule 6)



	.	reduce by rule 6


state 43:

	dec : vardec .  (reduce by rule 5)



	.	reduce by rule 5


state 44:

	dec : tydec .  (reduce by rule 4)



	.	reduce by rule 4


state 45:

	decs : decs dec .  (reduce by rule 2)



	.	reduce by rule 2


state 46:

	tydec : TYPE ID . EQ ty 

	EQ	shift 72


	.	error


state 47:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 74
	ASSIGN	shift 73


	.	error


state 48:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 75


	.	error


state 49:

	decs : decs . dec 
	letstm : LET decs . IN expseq END 

	IN	shift 76
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	dec	goto 45
	tydec	goto 44
	vardec	goto 43
	fundec	goto 42

	.	error


state 50:

	forstm : FOR ID . COLON ASSIGN exp TO exp DO exp 

	COLON	shift 77


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 78


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp . THEN exp 
	ifthenelse : IF exp . THEN exp ELSE exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 79


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : MINUS exp .  (reduce by rule 38)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 38


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : LPAREN exp . RPAREN 

	RPAREN	shift 80
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 55:

	exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 81
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 56:

	funcall : ID LPAREN . funinputs RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 83
	lvalue	goto 7
	funcall	goto 6
	funinputs	goto 82
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 59

error:  state 57: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift GE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift GT, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift LE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift LT, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift NEQ, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift EQ, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 57: shift/reduce conflict (shift PLUS, reduce by rule 30)

state 57:

	exp : lvalue ASSIGN exp .  (reduce by rule 30)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 30


state 58:

	lvalue : lvalue DOT ID .  (reduce by rule 49)



	.	reduce by rule 49


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 84
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 39)
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31


	.	reduce by rule 39


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 40)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32


	.	reduce by rule 40


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 41)
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 42)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 43)
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 44)
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 45)
	exp : exp . EQ exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 46)

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 46
	OR	reduce by rule 46
	THEN	reduce by rule 46
	ELSE	reduce by rule 46
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 37)
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 37


state 69:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 36)
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 



	.	reduce by rule 36


state 70:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 35)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 35


state 71:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 34)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 34


state 72:

	tydec : TYPE ID EQ . ty 

	ID	shift 88
	LBRACE	shift 87
	ARRAY	shift 86

	ty	goto 85

	.	error


state 73:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 89
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 74:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 90


	.	error


state 75:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 92

	tyfields	goto 91

	.	reduce by rule 11


state 76:

	letstm : LET decs IN . expseq END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 94
	lvalue	goto 7
	expseq	goto 93
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	reduce by rule 53


state 77:

	forstm : FOR ID COLON . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 95


	.	error


state 78:

	whilestm : WHILE exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 96
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 79:

	ifthen : IF exp THEN . exp 
	ifthenelse : IF exp THEN . exp ELSE exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 97
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 80:

	exp : LPAREN exp RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 81:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	RBRACK	shift 98
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 82:

	funcall : ID LPAREN funinputs . RPAREN 

	RPAREN	shift 99


	.	error


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs : exp . funinputs2 
	funinputs : exp .  (reduce by rule 58)

	COMMA	shift 101
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	funinputs2	goto 100

	.	reduce by rule 58


state 84:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 50)



	.	reduce by rule 50


state 85:

	tydec : TYPE ID EQ ty .  (reduce by rule 7)



	.	reduce by rule 7


state 86:

	ty : ARRAY . OF ID 

	OF	shift 102


	.	error


state 87:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 92

	tyfields	goto 103

	.	reduce by rule 11


state 88:

	ty : ID .  (reduce by rule 8)



	.	reduce by rule 8

error:  state 89: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 89:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 14)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 14


state 90:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 104


	.	error


state 91:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 105


	.	error


state 92:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 106


	.	error


state 93:

	letstm : LET decs IN expseq . END 

	END	shift 107


	.	error


state 94:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq : exp . expseq2 
	expseq : exp .  (reduce by rule 52)

	SEMICOLON	shift 109
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	expseq2	goto 108

	.	reduce by rule 52


state 95:

	forstm : FOR ID COLON ASSIGN . exp TO exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 110
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 96: shift/reduce conflict (shift OR, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift AND, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift GE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift GT, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift LE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift LT, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift NEQ, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift EQ, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift DIVIDE, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift TIMES, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift MINUS, reduce by rule 64)
error:  state 96: shift/reduce conflict (shift PLUS, reduce by rule 64)

state 96:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	whilestm : WHILE exp DO exp .  (reduce by rule 64)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 64

error:  state 97: shift/reduce conflict (shift ELSE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift OR, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 63)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 63)

state 97:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthen : IF exp THEN exp .  (reduce by rule 63)
	ifthenelse : IF exp THEN exp . ELSE exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 111


	.	reduce by rule 63


state 98:

	exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 112


	.	error


state 99:

	funcall : ID LPAREN funinputs RPAREN .  (reduce by rule 56)



	.	reduce by rule 56


state 100:

	funinputs : exp funinputs2 .  (reduce by rule 57)



	.	reduce by rule 57


state 101:

	funinputs2 : COMMA . exp 
	funinputs2 : COMMA . exp funinputs2 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 113
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 102:

	ty : ARRAY OF . ID 

	ID	shift 114


	.	error


state 103:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 115


	.	error


state 104:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 116
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 105:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 118
	EQ	shift 117


	.	error


state 106:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 119


	.	error


state 107:

	letstm : LET decs IN expseq END .  (reduce by rule 66)



	.	reduce by rule 66


state 108:

	expseq : exp expseq2 .  (reduce by rule 51)



	.	reduce by rule 51


state 109:

	expseq2 : SEMICOLON . exp 
	expseq2 : SEMICOLON . exp expseq2 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 120
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 110:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp . TO exp DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 121


	.	error


state 111:

	ifthenelse : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 122
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 112:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 123
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 113:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	funinputs2 : COMMA exp .  (reduce by rule 60)
	funinputs2 : COMMA exp . funinputs2 

	COMMA	shift 101
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	funinputs2	goto 124

	.	reduce by rule 60


state 114:

	ty : ARRAY OF ID .  (reduce by rule 10)



	.	reduce by rule 10


state 115:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 9)



	.	reduce by rule 9

error:  state 116: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 116: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 116:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 15)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 15


state 117:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 125
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 118:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 126


	.	error


state 119:

	tyfields : ID COLON ID .  (reduce by rule 12)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 127


	.	reduce by rule 12


state 120:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	expseq2 : SEMICOLON exp .  (reduce by rule 54)
	expseq2 : SEMICOLON exp . expseq2 

	SEMICOLON	shift 109
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	expseq2	goto 128

	.	reduce by rule 54


state 121:

	forstm : FOR ID COLON ASSIGN exp TO . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 129
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error

error:  state 122: shift/reduce conflict (shift OR, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift AND, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift GE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift GT, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift LE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift LT, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift NEQ, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift EQ, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift DIVIDE, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift TIMES, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift MINUS, reduce by rule 62)
error:  state 122: shift/reduce conflict (shift PLUS, reduce by rule 62)

state 122:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	ifthenelse : IF exp THEN exp ELSE exp .  (reduce by rule 62)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 62

error:  state 123: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 31)

state 123:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 31)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 31


state 124:

	funinputs2 : COMMA exp funinputs2 .  (reduce by rule 61)



	.	reduce by rule 61


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 16)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 130


	.	error


state 127:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 92

	tyfields	goto 131

	.	reduce by rule 11


state 128:

	expseq2 : SEMICOLON exp expseq2 .  (reduce by rule 55)



	.	reduce by rule 55


state 129:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp TO exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 132


	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 133
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 131:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 13)



	.	reduce by rule 13


state 132:

	forstm : FOR ID COLON ASSIGN exp TO exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	MINUS	shift 22
	IF	shift 21
	WHILE	shift 20
	FOR	shift 19
	LET	shift 18
	BREAK	shift 17
	NIL	shift 16
	FUNCTION	shift 15
	VAR	shift 14
	TYPE	shift 13

	tydec	goto 11
	vardec	goto 10
	fundec	goto 9
	exp	goto 134
	lvalue	goto 7
	funcall	goto 6
	ifthen	goto 5
	ifthenelse	goto 4
	whilestm	goto 3
	forstm	goto 2
	letstm	goto 1

	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 17)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error

error:  state 134: shift/reduce conflict (shift OR, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift AND, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 65)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 65)

state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . OR exp 
	exp : exp . AND exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	forstm : FOR ID COLON ASSIGN exp TO exp DO exp .  (reduce by rule 65)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 65


state 135:


	EOF	accept


	.	error

537 of 1109 action table entries left after compaction
406 goto table entries
